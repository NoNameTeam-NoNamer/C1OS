<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="C1OS.CardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:C1OS"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    NavigationCacheMode="Enabled"
    Background="Transparent">

    <Page.Resources>
        <!-- In this example, the GridView's ItemTemplate property is bound to a data template (shown below)
called ImageOverlayTemplate, defined in the Page.Resources section of the XAML file.

The data template is defined to display a CustomDataObject object (same type as in above sample). -->

        <DataTemplate x:Name="NameOverlayTemplate" x:DataType="x:String">
            <TextBlock Text="{x:Bind}" Margin="12" FontSize="30" HorizontalAlignment="Center" TextAlignment="Center"
                       Height="36" Width="128"/>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <TextBlock x:Name="pageTitle" Text="抽签"
       Margin="48" Style="{StaticResource TitleTextBlockStyle}"/>
        <StackPanel VerticalAlignment="Center" Orientation="Vertical" Margin="36,96,36,24">

            <GridView
                    x:Name="StyledGrid"
                    ItemTemplate="{StaticResource NameOverlayTemplate}"
                    	SelectionMode="Single"
                    IsItemClickEnabled="False"
                HorizontalAlignment="Center"
                    SelectionChanged="SelectName">
                <GridView.ItemContainerTransitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                    </TransitionCollection>
                </GridView.ItemContainerTransitions>

                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem" BasedOn="{StaticResource DefaultGridViewItemStyle}">
                        <Setter Property="Margin" Value="2, 3, 2, 3"/>
                    </Style>
                </GridView.ItemContainerStyle>

                <!-- An extra property also needs to be added to the GridView's ItemsWrapGrid.
The following sets the maximum # of items to show before wrapping.-->
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid x:Name="MaxItemsWrapGrid"
                       MaximumRowsOrColumns="6"
                       Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
            </GridView>
        </StackPanel>
    </Grid>
</Page>
